name: Backend CI/CD Pipeline

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  REGISTRY: docker.io
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
  SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
  NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
  NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
  NEXUS_URL: ${{ secrets.NEXUS_URL }}

jobs:
  build-and-analyze:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        service: [config-server, RegistryServer, GatewayAPI, patient-serviice, facturation-service]

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Cache SonarQube packages
      uses: actions/cache@v3
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Maven packages
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and analyze with Maven
      working-directory: ${{ matrix.service }}
      run: |
        mvn clean verify sonar:sonar \
        -Dsonar.projectKey=${{ matrix.service }} \
        -Dsonar.host.url=${{ env.SONAR_HOST_URL }} \
        -Dsonar.login=${{ env.SONAR_TOKEN }}

    - name: Publish to Nexus
      working-directory: ${{ matrix.service }}
      run: |
        mvn deploy \
        -DaltDeploymentRepository=nexus::default::${{ env.NEXUS_URL }}/repository/maven-releases \
        -DskipTests \
        -s settings.xml

    - name: Build Docker image
      working-directory: ${{ matrix.service }}
      run: |
        docker build -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.sha }} .
        docker build -t ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}:latest .

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Push Docker image
      run: |
        docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}:${{ github.sha }}
        docker push ${{ env.REGISTRY }}/${{ github.repository_owner }}/${{ matrix.service }}:latest

  deploy:
    needs: build-and-analyze
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Start services with Docker Compose
      run: docker-compose up -d

  monitoring:
    needs: deploy
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Setup monitoring stack
      run: |
        docker-compose -f docker-compose.monitoring.yml up -d 